#pragma checksum "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3316ce7ac22803c03f87a885e95090979be8b136"
// <auto-generated/>
#pragma warning disable 1591
namespace Best_Hackathon_Codiseea.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Best_Hackathon_Codiseea;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\_Imports.razor"
using Best_Hackathon_Codiseea.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
using Best_Hackathon_Codiseea.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
using Best_Hackathon_Codiseea.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/stageone")]
    public partial class StageOne : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h3>Bun venit la BEST Hackathon Codiseea !</h3>\r\n");
            __builder.AddMarkupContent(1, "<h6>\r\n    Ne bucurăm că sunteţi alături de noi, pentru a începe cel mai fain drum, dar şi cel mai dificil.\r\n    La această etapă trebuie să vă adaptaţi, pentru a înfrunta alternativul creaturilor mitice, adică problemele logice.\r\n</h6>\r\n");
            __builder.AddMarkupContent(2, "<h6>\r\n    Alte detalii:\r\n    Soluţiile se vor introduce în chenarele de mai jos, iar după ce aţi introdus soluţia, butonaţi \"Submit\".\r\n</h6>\r\n\r\n<br>\r\n<br>");
#nullable restore
#line 20 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
 if (teamTasks1 == null)
{

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(3, "<p><em>Loading..</em></p>");
#nullable restore
#line 23 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
}
else
{

#line default
#line hidden
#nullable disable
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "card");
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "card-body");
            __builder.OpenElement(8, "h4");
            __builder.AddMarkupContent(9, "\r\n                1. Status :\r\n");
#nullable restore
#line 30 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                 foreach (var item in teamTasks1)
                {
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                     if (item.Value == "Correct")
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(10, "span");
            __builder.AddAttribute(11, "class", "text-success");
            __builder.AddContent(12, 
#nullable restore
#line 34 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                                                    item.Value

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 35 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                        HideAnswer = true;
                    }
                    else
                    {
                        HideAnswer = false;
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 40 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                     
                }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(13, "\r\n            <hr>\r\n            ");
            __builder.OpenElement(14, "div");
            __builder.AddAttribute(15, "hidden", 
#nullable restore
#line 44 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                          HideAnswer

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(16, "<strong>Problema:</strong>\r\n                ");
            __builder.AddMarkupContent(17, "<p>BEST Chișinău iubește culoarea roșu.</p>\r\n                <br>\r\n                ");
            __builder.AddMarkupContent(18, "<strong>Sarcina:</strong>\r\n                <br>\r\n                ");
            __builder.AddMarkupContent(19, "<p>Trebuie să calculați suma componentelor roșii din fiecare pixel a <a href=\"https://drive.google.com/u/0/uc?id=1HPxGU2uXfbxHAyRan4cHtHuOaS8EKNWq&export=download\">imaginii</a></p>\r\n                <br>\r\n                ");
            __builder.OpenElement(20, "div");
            __builder.AddAttribute(21, "class", "row");
            __builder.OpenElement(22, "div");
            __builder.AddAttribute(23, "class", "col-9");
            __builder.OpenElement(24, "input");
            __builder.AddAttribute(25, "class", "form-control");
            __builder.AddAttribute(26, "value", Microsoft.AspNetCore.Components.BindConverter.FormatValue(
#nullable restore
#line 54 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                                                            UserAnswer

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(27, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => UserAnswer = __value, UserAnswer));
            __builder.SetUpdatesAttributeName("value");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(28, "\r\n                    ");
            __builder.OpenElement(29, "div");
            __builder.AddAttribute(30, "class", "col-3");
            __builder.OpenElement(31, "button");
            __builder.AddAttribute(32, "type", "submit");
            __builder.AddAttribute(33, "class", "btn btn-primary");
            __builder.AddAttribute(34, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 57 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
                                                                                () => CheckAnswer(1)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(35, "Submit");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(36, "\r\n    <br>");
#nullable restore
#line 65 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
    /*<div class="card">
        <div class="card-body">
            <h4>
                2. Status :
                @foreach (var item in teamTasks2)
                {
                    @if (item.Value == "Correct")
                    {
                        <span class="text-success">@item.Value</span>
                        HideAnswer2 = true;
                    }
                    else
                    {
                        HideAnswer2 = false;
                    }
                }
            </h4>
            <hr />
            <div hidden="@HideAnswer2">
                <strong>Problema succesului:</strong>
                <p>
                    Se dă un şir de numere care ar reprezenta succesul unei persoane. Succesul este atunci când valorile din subşir sunt în ordine crescătoare. Pentru că nimeni nu este ideal, după fiecare acţiune executată cu succes, urmează insuccesul - o valoare mai mică de cât precedenta.
                    Toate acestea se vor repeta una după alta până când se va întâlni valoarea 0, rezultând sfarşitul şirului.
                </p>
                <br />
                <strong>Sarcina:</strong>
                <p>Se va afişa succesul în ordine inversă celei de introducer, separate prin spaţiu.</p>
                <strong>Exemplu:</strong>
                <p>Intrare: 1 2 10 3 7 5 4 3 0</p>
                <p>Ieşire:  10 2 1 7 3 8 4 2 2</p>
                <br />
                <p>Numerele 1,2,10 reprezintă succesul, respectiv ca date de ieşire se vor inversa (10,2,1), dupa urmează nr 3 şi reprezintă eşecul, iar 7 reprezintă succesul, iar 5,4,3 reprezintă eşecul. La sfarşitul şirului de numere, în locul lui 0 va fi numărul de succese, în cazul nostru este nr 2.</p>
                <br />
                <p>Datele de intrare pentru determinarea cheii: 1 1 4 8 9 2 4 8 44 5 86 2 4 0</p>
                <br />
                <div class="row">
                    <div class="col-9">
                        <input class="form-control" @bind="@UserAnswer2">
                    </div>
                    <div class="col-3">
                        <button type="submit" class="btn btn-primary" @onclick="() => CheckAnswer(2)">Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br />
    <div class="card">
        <div class="card-body">
            <h4>
                3. Status :
                @foreach (var item in teamTasks3)
                {
                    @if (item.Value == "Correct")
                    {
                        <span class="text-success">@item.Value</span>
                        HideAnswer3 = true;
                    }
                    else
                    {
                        HideAnswer3 = false;
                    }
                }
            </h4>
            <hr />
            <div hidden="@HideAnswer3">
                <strong>Problema:</strong>
                <p>Sunt date <a href="https://drive.google.com/u/0/uc?id=13Uuo0yslwXKzi1b0bL3SzIdJRE5OznKq&export=download">două fișiere</a> care conțin cuvinte. Primul fișier conține mai multe cuvinte. Al doilea conține câteva din cuvintele din primul fișier dar literele sunt schimbare cu locul în interiorul cuvintelor.</p>
                <br />
                <strong>Sarcina:</strong>
                <p>
                    Să se găsească cuvintele care se conțin în ambele șiruri. <br />
                    Cheia va conține cuvintele concatenate în ordinea din fișierul al doilea.
                </p>
                <br />
                <div class="row">
                    <div class="col-9">
                        <input class="form-control" @bind="@UserAnswer3">
                    </div>
                    <div class="col-3">
                        <button type="submit" class="btn btn-primary" @onclick="() => CheckAnswer(3)">Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br />

    <div class="card">
        <div class="card-body">
            <h4>
                4. Status :
                @foreach (var item in teamTasks4)
                {
                    @if (item.Value == "Correct")
                    {
                        <span class="text-success">@item.Value</span>
                        HideAnswer4 = true;
                    }
                    else
                    {
                        HideAnswer4 = false;
                    }
                }
            </h4>
            <hr />
            <div hidden="@HideAnswer4">
                <strong>Problema:</strong>
                <p>Pe pagina <a href="https://www.instagram.com/best_chisinau/">BEST Chişinău</a> de instagram sunt ascunse bucăți de cheie.</p>
                <br />
                <strong>Sarcina:</strong>
                <br />
                <p>Găsiți cheia.</p>
                <br />
                <div class="row">
                    <div class="col-9">
                        <input class="form-control" @bind="@UserAnswer4">
                    </div>
                    <div class="col-3">
                        <button type="submit" class="btn btn-primary" @onclick="() => CheckAnswer(4)">Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br />

    <div class="card">
        <div class="card-body">
            <h4>
                5. Status :
                @foreach (var item in teamTasks5)
                {
                    @if (item.Value == "Correct")
                    {
                        <span class="text-success">@item.Value</span>
                        HideAnswer5 = true;
                    }
                    else
                    {
                        HideAnswer5 = false;
                    }
                }
            </h4>
            <hr />
            <div hidden="@HideAnswer5">
                <strong>Problema:</strong>
                <p>Mai jos este atașat un fișier text, care conține un fragment din Odiseea lui Homer. Acest <a href="https://drive.google.com/u/0/uc?id=1y8NS47bNU0umd6jhWMLCqwCFhiTImoNX&export=download">fișier</a> a fost criptat în două etape, utilizând doi algoritmi de criptare diferiți.</p>
                <br />
                <strong>Sarcina</strong>
                <br />
                <p>Să se descifreze fragmentul inițial. După ce a fost descifrat, utilizând aceiași algoritmi se va cripta următoarea secvență:</p>
                <br />
                <p>
                    o pace-ntre popor si el a pus,<br />
                    atene deci, schimbindu-i sortii pasul,<br />
                    si-avind ca Mentor chipul sau si glasul.<br />
                </p>
                <br />
                <strong>Note:</strong>
                <p>Prima etapă de decriptare:</p>
                <p>Se folosește un algoritm simetric, iar lungimea cheii este de 16 biți. În rezultatul decriptării va trebui să obțineți un text care conține doar caractere afișabile.</p>
                <p>
                    A doua etapă: <br />
                    i = i <br />
                    v = a, dar a != v <br />
                </p>
                <p>Textul inițial conține nume de personaje, munți și alte substantive proprii din Odiseea. Toate sunt scrise cu litere minuscule.</p>

                <strong>Criptarea:</strong>
                <p>Textul propus va fi copiat în tocmai ca în sarcină. Textul variantei criptate se recomandă de a fi salvat într-un fișier de unde să fie ulterior copiat și inserat în câmpul cheii.</p>
                <br />
                <div class="row">
                    <div class="col-9">
                        <textarea class="form-control" @bind="@UserAnswer5" style="width:36rem;"></textarea>
                    </div>
                    <div class="col-3">
                        <button type="submit" class="btn btn-primary" @onclick="() => CheckAnswer(5)">Submit</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <br />
    <br />*/
}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
#nullable restore
#line 256 "C:\Users\Tofan\OneDrive\Desktop\Endava\Hackathon codiseea\BEST-Hackathon-Codiseea\Pages\StageOne.razor"
       
    [Parameter]
    public string CorrectAnswer { get; set; } = "58738108";

    [Parameter]
    public string CorrectAnswer2 { get; set; } = "9 8 4 1 1 2 44 8 4 5 86 2 4 4";

    [Parameter]
    public string CorrectAnswer3 { get; set; } = "lopatavremeasosindfrumosrotundurechinimenigleznecatargvislas";

    [Parameter]
    public string CorrectAnswer4 { get; set; } = "bestchisinaucodiseeahackathon2020decembrie";

    [Parameter]
    public string CorrectAnswer5 { get; set; } = @"YUY
YXYYUrXUX

TY

X 

TsUXY5
XY
YXW";

    [Parameter]
    public string CorrectAnswer5_Linux { get; set; } = @"^WY^H^X^[^\U^W^L^K^]Y^H^V^H^V
Y^K^PX^\^TY^YY^H^L^KUr^X^L^\^V^\X^]^]^Z^QUX
^[^Q^Q^T^Z^P^V^]^MT^QY^K^V
^M^Q^PX ^Y
^M^UTs^K^PU^X^N^P^V^]X^Z^YY5^\^V^M^W^KX^Z^P^P^H^L^TY^K^X^MY^K^PX^^^T^X^K^L^TW";

    public string UserAnswer { get; set; }
    public string UserAnswer2 { get; set; }
    public string UserAnswer3 { get; set; }
    public string UserAnswer4 { get; set; }
    public string UserAnswer5 { get; set; }

    public bool HideAnswer = false;
    public bool HideAnswer2 = false;
    public bool HideAnswer3 = false;
    public bool HideAnswer4 = false;
    public bool HideAnswer5 = false;

    public string value = "";
    //date;

    public int sum = 0;

    List<TeamTask> teamTasks1;
    List<TeamTask> teamTasks2;
    List<TeamTask> teamTasks3;
    List<TeamTask> teamTasks4;
    List<TeamTask> teamTasks5;

    protected async Task load()
    {
        var teamName = httpContextAccessor.HttpContext.User.Identity.Name;
        teamTasks1 = await teamTaskService.GetTasksAsync(teamName, "1");
        //teamTasks2 = await teamTaskService.GetTasksAsync(teamName, "2");
        //teamTasks3 = await teamTaskService.GetTasksAsync(teamName, "3");
        //teamTasks4 = await teamTaskService.GetTasksAsync(teamName, "4");
        //teamTasks5 = await teamTaskService.GetTasksAsync(teamName, "5");

    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await load();
        }
        catch (Exception)
        {

            throw;
        }
    }

    protected async Task CheckAnswer(int VerifyTask)
    {
        switch (VerifyTask)
        {
            case 1:
                if (!string.IsNullOrEmpty(UserAnswer))
                {
                    if (UserAnswer.ToLower() == CorrectAnswer.ToLower())
                    {
                        TeamTask s = new TeamTask()
                        {
                            ID = Guid.NewGuid().ToString(),
                            TeamName = httpContextAccessor.HttpContext.User.Identity.Name,
                            Value = "Correct",
                            Points = 1,
                            ItemNumber = "1",
                            Date = DateTime.Now,
                        };

                        await teamTaskService.InsertTeamTaskAsync(s);
                        await load();
                    }
                    else
                    {
                        value = "Incorrect";
                    }
                }
                break;
            case 2:
                if (!string.IsNullOrEmpty(UserAnswer2))
                {
                    if (UserAnswer2.ToLower() == CorrectAnswer2.ToLower())
                    {
                        TeamTask s = new TeamTask()
                        {
                            ID = Guid.NewGuid().ToString(),
                            TeamName = httpContextAccessor.HttpContext.User.Identity.Name,
                            Value = "Correct",
                            Points = 1,
                            ItemNumber = "2",
                            Date = DateTime.Now,
                        };

                        await teamTaskService.InsertTeamTaskAsync(s);
                        await load();
                    }
                }
                break;
            case 3:
                if (!string.IsNullOrEmpty(UserAnswer3))
                {
                    if (UserAnswer3.ToLower() == CorrectAnswer3.ToLower())
                    {
                        TeamTask s = new TeamTask()
                        {
                            ID = Guid.NewGuid().ToString(),
                            TeamName = httpContextAccessor.HttpContext.User.Identity.Name,
                            Value = "Correct",
                            Points = 1,
                            ItemNumber = "3",
                            Date = DateTime.Now,
                        };

                        await teamTaskService.InsertTeamTaskAsync(s);
                        await load();
                    }
                }
                break;
            case 4:
                if (!string.IsNullOrEmpty(UserAnswer4))
                {
                    if (UserAnswer4.ToLower() == CorrectAnswer4.ToLower())
                    {
                        TeamTask s = new TeamTask()
                        {
                            ID = Guid.NewGuid().ToString(),
                            TeamName = httpContextAccessor.HttpContext.User.Identity.Name,
                            Value = "Correct",
                            Points = 1,
                            ItemNumber = "4",
                            Date = DateTime.Now,
                        };

                        await teamTaskService.InsertTeamTaskAsync(s);
                        await load();
                    }
                }
                break;
            case 5:
                if (!string.IsNullOrEmpty(UserAnswer5) && (!string.IsNullOrEmpty(UserAnswer5)))
                {
                    if (UserAnswer5.ToLower() == CorrectAnswer5.ToLower() || UserAnswer5.ToLower() == CorrectAnswer5_Linux.ToLower())
                    {
                        TeamTask s = new TeamTask()
                        {
                            ID = Guid.NewGuid().ToString(),
                            TeamName = httpContextAccessor.HttpContext.User.Identity.Name,
                            Value = "Correct",
                            Points = 1,
                            ItemNumber = "5",
                            Date = DateTime.Now,
                        };

                        await teamTaskService.InsertTeamTaskAsync(s);
                        await load();
                    }
                }
                break;
            default:
                value = "False";
                break;
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private TeamTaskService teamTaskService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpContextAccessor httpContextAccessor { get; set; }
    }
}
#pragma warning restore 1591
